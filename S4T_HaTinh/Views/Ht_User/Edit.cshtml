@model S4T_HaTinh.Models.EditUserViewModel
@using S4T_HaTinh.Models;
@{
    var listTrangThai = new SelectList(MvcApplication.ListTrangThai(), "DanhMuc_ID", "TenDanhMuc");
    var listDonVi = new SelectList(ViewBag.ListDonVi, "DonVi_ID", "TenDonVi");
    var list = (IEnumerable<AspNetRoles>)ViewBag.ListRole;
    var listRole = new SelectList(list.Where(o => o.TrangThai == S4T_HaTinh.Common.TrangThai.HoatDong), "Id", "TenHienThi");
}

<h2>Sửa</h2>

<form action="Edit" method="post" id="frmUpload">
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        @if (listRole.Any(o => o.Value == Model.RoleId))
        {
            if (ViewBag.DonViSoThongTinTruyenThong != null)
            {
                <div class="divRow">
                    @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "divLabel" })
                    <div class="divControl">
                        @Html.DropDownListFor(model => model.RoleId, listRole, new { @class = "S4T_ComboBox", @style = "width:250px;" })
                        @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="divRow">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "divLabel" })
                    <div class="divControl">
                        @Html.DisplayTextFor(model => model.UserName)
                    </div>
                </div>
            }
            else  // Nếu là đơn vị
            {
                <div class="divRow">
                    @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "divLabel" })
                    <div class="divControl">
                        @Html.DisplayTextFor(model => listRole.FirstOrDefault(o => o.Value == model.RoleId).Text)
                        @*@Html.TextBoxFor(model => listRole.FirstOrDefault(o => o.Value == model.RoleId).Text, new { @class = "S4T_AutoComplete", @style = "width:350px;", @readonly="readonly" })*@
                        @Html.HiddenFor(model => model.RoleId)
                        @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        }
        else
        {
            // Tạo Vai trò cho người dùng nếu chưa có
            <div class="divRow">
                @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "divLabel" })
                <div class="divControl">
                    @Html.DropDownListFor(model => model.RoleId, listRole, new { @class = "S4T_ComboBox", @style = "width:250px;" })
                    @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="divRow">
            @Html.LabelFor(model => model.HoVaTen, htmlAttributes: new { @class = "divLabel" })
            <div class="divControl">
                @Html.TextBoxFor(model => model.HoVaTen, new { @class = "S4T_AutoComplete", @style = "width:350px;" })
                @Html.ValidationMessageFor(model => model.HoVaTen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="divRow">
            @Html.LabelFor(model => model.DonVi_ID, htmlAttributes: new { @class = "divLabel" })
            <div class="divControl">
                @Html.DisplayTextFor(model => listDonVi.FirstOrDefault(o => o.Value == model.DonVi_ID.ToString()).Text)
                @*@Html.TextBoxFor(model => listDonVi.FirstOrDefault(o => o.Value == model.DonVi_ID.ToString()).Text, new { @class = "S4T_AutoComplete", @style = "width:350px;", @readonly = "readonly" })*@
            </div>
        </div>

        <div class="divRow">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "divLabel" })
            <div class="divControl">
                @Html.TextBoxFor(model => model.Email, new { @class = "S4T_AutoComplete", @style = "width:350px;" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="divRow">
            @Html.LabelFor(model => model.TrangThai, htmlAttributes: new { @class = "divLabel" })
            <div class="divControl">
                @Html.DropDownListFor(model => model.TrangThai, listTrangThai, new { @class = "S4T_DropDownList", @style = "width:180px;" })
                @Html.ValidationMessageFor(model => model.TrangThai, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (ViewBag.DonViSoThongTinTruyenThong != null)
        {
            <div class="divRow">
                <label class="divLabel"></label>
                <div class="divControl">
                    <a id="ResetPass" href='/HT_User/ResetPassword?id=@Model.Id&userName=@Model.UserName'>Reset mật khẩu</a>
                </div>
            </div>
        }
        <div class="divRow">
            <label class="divLabel"></label>
            <div class="divControl">
                <button type="submit" class="k-button k-button-icontext"><span class="k-icon k-i-tick"></span>Lưu</button>
            </div>
        </div>
    </div>
</form>

<script type="text/javascript">
    $(document).ready(function () {

    });

    function goBackpage() {
        if ('@ViewBag.DonViSoThongTinTruyenThong' == '') {
            location.href = "/Ht_User/ListUser";
        } else {
            location.href = "/Ht_User/ListChuyenVienSo";
        }
    }
</script>
