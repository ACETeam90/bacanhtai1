//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace S4T_HaTinh.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using S4T_HaTinh.App_GlobalResources;

    public partial class TD_HoSoDuAn
    {
        [Key]
        public int HoSoDuAn_ID { get; set; }

        [Display(Name = "Mã hồ sơ")]
        public string MaHoSo { get; set; }

        [Required(AllowEmptyStrings = false,ErrorMessageResourceType = typeof(ModelBinders), ErrorMessageResourceName = "PropertyValueRequired")]
        [StringLength(250, ErrorMessageResourceType = typeof(ModelBinders), ErrorMessageResourceName = "StringOutOfRange")]
        [Display(Name = "Tên dự án")]
        public string TenDuAn { get; set; }

        [Display(Name = "Chủ đầu tư")]
        [StringLength(250, ErrorMessageResourceType = typeof(ModelBinders), ErrorMessageResourceName = "StringOutOfRange")]
        public string ChuDauTu { get; set; }

        [Display(Name = "Tổ chức tư vấn")]
        [StringLength(250, ErrorMessageResourceType = typeof(ModelBinders), ErrorMessageResourceName = "StringOutOfRange")]
        public string ToChucTuVan { get; set; }

        [Required(AllowEmptyStrings = false,ErrorMessageResourceType = typeof(ModelBinders), ErrorMessageResourceName = "PropertyValueRequired")]
        [Range(typeof(decimal), "0", "9999999999999000",
            ErrorMessageResourceType = typeof(ModelBinders), ErrorMessageResourceName = "DecimalValueOutOfRange")] // 16 chu so
        [Display(Name = "Nguồn vốn")]
        public decimal NguonVon { get; set; }

        [Display(Name = "Địa điểm")]
        [StringLength(500, ErrorMessageResourceType = typeof(ModelBinders), ErrorMessageResourceName = "StringOutOfRange")]
        public string DiaDiem { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessageResourceType = typeof(ModelBinders), ErrorMessageResourceName = "PropertyValueRequired")]
        [Range(typeof(decimal), "0", "9999999999999000",
            ErrorMessageResourceType = typeof(ModelBinders), ErrorMessageResourceName = "DecimalValueOutOfRange")]
        [Display(Name = "Tổng mức đầu tư")]
        public decimal TongMucDauTu { get; set; }

        [Required(AllowEmptyStrings = false,ErrorMessageResourceType = typeof(ModelBinders), ErrorMessageResourceName = "PropertyValueRequired")]
        [Display(Name = "Mã loại dự án")]
        public int LoaiDuAn_ID { get; set; }

        [Required(AllowEmptyStrings = false,ErrorMessageResourceType = typeof(ModelBinders), ErrorMessageResourceName = "PropertyValueRequired")]
        [Range(typeof(Int32), "0", "2147483647",
            ErrorMessageResourceType = typeof(ModelBinders), ErrorMessageResourceName = "IntegerValueOutOfRange")]
        [Display(Name = "Số ngày giải quyết")]
        public int SoNgayGiaiQuyet { get; set; }

        [Required(AllowEmptyStrings = false,ErrorMessageResourceType = typeof(ModelBinders), ErrorMessageResourceName = "PropertyValueRequired")]
        [DisplayFormat(DataFormatString = "{0:dd/MM/yyyy}", ApplyFormatInEditMode = true)]
        [Display(Name = "Ngày nhận")]
        public System.DateTime NgayNhan { get; set; }

        [Required(AllowEmptyStrings = false,ErrorMessageResourceType = typeof(ModelBinders), ErrorMessageResourceName = "PropertyValueRequired")]
        [DisplayFormat(DataFormatString = "{0:dd/MM/yyyy}", ApplyFormatInEditMode = true)]
        [Display(Name = "Ngày hợp lệ")]
        public System.DateTime NgayHopLe { get; set; }

        [Required(AllowEmptyStrings = false,ErrorMessageResourceType = typeof(ModelBinders), ErrorMessageResourceName = "PropertyValueRequired")]
        [DisplayFormat(DataFormatString = "{0:dd/MM/yyyy}", ApplyFormatInEditMode = true)]
        [Display(Name = "Ngày trả")]
        public System.DateTime NgayTra { get; set; }

        [Display(Name = "Quy mô")]
        public string QuyMo { get; set; }

        [Display(Name = "Trạng thái")]
        public int TrangThai { get; set; }
        [Display(Name = "Qua trình thực hiện")]
        public string QuaTrinhThucHien { get; set; }

        [Display(Name = "Danh sách file")]
        public List<TD_FileHoSoDinhKem> ListFile { get; set; }

        [Display(Name = "Tên cơ quan")]
        public string TenCoQuan { get; set; }

        [Display(Name = "Nội dung tóm tắt")]
        public string NoiDungTomTat { get; set; }

        [Display(Name = "Mục tiêu")]
        public string MucTieu { get; set; }

        [Display(Name = "Nội dung")]
        public string NoiDung { get; set; }

        [Display(Name = "Hình thức quản lý")]
        public int HinhThucQuanLy_ID { get; set; }

        [Display(Name = "Hình thức khác")]
        public string HinhThucQuanLyKhac { get; set; }
        
        [Display(Name = "Từ năm")]
        public Nullable<System.DateTime> TuNgay { get; set; }
                
        [Display(Name = "Đến năm")]
        public Nullable<System.DateTime> DenNgay { get; set; }

        [Display(Name = "Quy trình quản lý")]
        public string QuyTrinhQuanLy { get; set; }

        [Display(Name = "Nhóm dự án")]
        public int NhomDuAn_ID { get; set; }

        [Display(Name = "Tính chất dự án")]
        public int TinhChatDuAn_ID { get; set; }

        [Display(Name = "Chi phí xây lắp")]
        public decimal ChiPhiXayLap { get; set; }

        [Display(Name = "Chi phí thiết bị")]
        public decimal ChiPhiThietBi { get; set; }

        [Display(Name = "Chi phí quản lý")]
        public decimal ChiPhiQuanLy { get; set; }

        [Display(Name = "Chi phí tư vấn")]
        public decimal ChiPhiTuVan { get; set; }

        [Display(Name = "Chi phí khác")]
        public decimal ChiPhiKhac { get; set; }

        [Display(Name = "Chi phí dự phòng")]
        public decimal ChiPhiDuPhong { get; set; }

        [Display(Name = "Chủ trương đầu tư")]
        public string QDPDDauTu { get; set; }

        [Display(Name = "Quyết định phê duyệt dự án")]
        public string QDPDDuAn { get; set; }

        [Display(Name = "Quyết định phê duyệt thiết kế")]
        public string QDPDThietKe { get; set; }

        [Display(Name = "Nhà thầu thực hiện dự án")]
        public string NhaThau { get; set; }

        //Tình trạng thực hiện
        [Display(Name = "Giai đoạn 1")]
        public string TinhTrangThucHien { get; set; }

        [Display(Name = "Ngân sách trung ương")]
        public string NganSachTrungUong { get; set; }

        [Display(Name = "Ngân sách tỉnh")]
        public string NganSachTinh { get; set; }

        [Display(Name = "Ngân sách đơn vị")]
        public string NganSachDonVi { get; set; }

        [Display(Name = "Nguồn khác")]
        public string NguonKhac { get; set; }

        [Display(Name = "Hạng mục triển khai")]
        public string HangMucTrienKhai { get; set; }

        [Display(Name = "Thời gian hoàn thành")]
        public string ThoiGianHoanThanh { get; set; }

        [Display(Name = "Sản phẩm hạng mục")]
        public string SanPhamHangMuc { get; set; }

        [Display(Name = "Kinh phí thực hiện hạng mục")]
        public decimal KinhPhiThucHienHangMuc { get; set; }

        [Display(Name = "Kết quả đầu tư")]
        public string KetQuaDauTu { get; set; }

        [Display(Name = "Nhà thầu tư vấn đầu tư")]
        public string str1 { get; set; }

        // trình trạng dự án
        [Display(Name = "Giai đoạn 2")]
        public string str2 { get; set; }

        // trình trạng dự án
        [Display(Name = "Giai đoạn 3")]
        public string str3 { get; set; }
        public string str4 { get; set; }
        public string str5 { get; set; }

        [Display(Name = "Từ năm")]
        public int int1 { get; set; }

        [Display(Name = "Đến năm")]
        public int int2 { get; set; }

        public int int3 { get; set; }
        public int int4 { get; set; }
        public int int5 { get; set; }
        public decimal del1 { get; set; }
        public decimal del2 { get; set; }
        public decimal del3 { get; set; }
        public decimal del4 { get; set; }
        public decimal del5 { get; set; }
    }
}
